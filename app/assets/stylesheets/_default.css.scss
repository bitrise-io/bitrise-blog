/* Functions */

@function contains($list, $element) {
	@return not not index($list, $element);
}

@function string_replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + string_replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@function svg_with_content($content, $width, $height) {
	@return svg_content_with_attributes("<svg>#{ $content }</svg>", (
		xmlns: "http://www.w3.org/2000/svg",
		width: $width,
		height: $height,
		viewBox: "0 0 #{ $width } #{ $height }"
	));
}

@function svg_content_with_attributes($svg_content, $attributes) {
	$attributes_string: "";

	@each $key, $value in $attributes {
		$attributes_string: "#{ $attributes_string } #{ $key }=\"#{ $value }\"";
	}

	@return string_replace($svg_content, "<svg", "<svg" + $attributes_string);
}

@function background_image_from_svg_content($svg_content) {
	@return url('data:image/svg+xml;utf8, #{ $svg_content }');
}

@function background_image_from_svg_content_with_attributes($svg_content, $attributes) {
	@return background_image_from_svg_content(svg_content_with_attributes($svg_content, $attributes));
}

/* Screen sizes */

$screen-huge: 1280px;
$screen-big: 992px;
$screen-mid: 768px;
$screen-small: 480px;
$screen-tiny: 360px;
$screen-minimum: 320px;

/* Media Queries */

@mixin media-above($value) {

	@media only screen and (min-width: $value + 1) {
		@content;
	}
}

@mixin media-below($value) {

	@media only screen and (max-width: $value - 1) {
		@content;
	}
}

@mixin media-above-inclusive($value) {

	@media only screen and (min-width: $value) {
		@content;
	}
}

@mixin media-below-inclusive($value) {

	@media only screen and (max-width: $value) {
		@content;
	}
}

@mixin media-above-height($value) {

	@media only screen and (min-height: $value + 1) {
		@content;
	}
}

@mixin media-below-height($value) {

	@media only screen and (max-height: $value + 1) {
		@content;
	}
}

@mixin media-above-height-inclusive($value) {

	@media only screen and (min-height: $value) {
		@content;
	}
}

@mixin media-below-height-inclusive($value) {

	@media only screen and (max-height: $value) {
		@content;
	}
}

@mixin media-above-huge {
	@include media-above($screen-huge) {
		@content;
	};
}

@mixin media-above-big {
	@include media-above($screen-big) {
		@content;
	};
}

@mixin media-above-mid {
	@include media-above($screen-mid) {
		@content;
	};
}

@mixin media-above-small {
	@include media-above($screen-small) {
		@content;
	};
}

@mixin media-above-tiny {
	@include media-above($screen-tiny) {
		@content;
	};
}

@mixin media-below-huge {
	@include media-below($screen-huge) {
		@content;
	};
}

@mixin media-below-big {
	@include media-below($screen-big) {
		@content;
	};
}

@mixin media-below-mid {
	@include media-below($screen-mid) {
		@content;
	};
}

@mixin media-below-small {
	@include media-below($screen-small) {
		@content;
	};
}

@mixin media-below-tiny {
	@include media-below($screen-tiny) {
		@content;
	};
}

@mixin media-above-inclusive-huge {
	@include media-above-inclusive($screen-huge) {
		@content;
	};
}

@mixin media-above-inclusive-big {
	@include media-above-inclusive($screen-big) {
		@content;
	};
}

@mixin media-above-inclusive-mid {
	@include media-above-inclusive($screen-mid) {
		@content;
	};
}

@mixin media-above-inclusive-small {
	@include media-above-inclusive($screen-small) {
		@content;
	};
}

@mixin media-above-inclusive-tiny {
	@include media-above-inclusive($screen-tiny) {
		@content;
	};
}

@mixin media-below-inclusive-huge {
	@include media-below-inclusive($screen-huge) {
		@content;
	};
}

@mixin media-below-inclusive-big {
	@include media-below-inclusive($screen-big) {
		@content;
	};
}

@mixin media-below-inclusive-mid {
	@include media-below-inclusive($screen-mid) {
		@content;
	};
}

@mixin media-below-inclusive-small {
	@include media-below-inclusive($screen-small) {
		@content;
	};
}

@mixin media-below-inclusive-tiny {
	@include media-below-inclusive($screen-tiny) {
		@content;
	};
}

/* Attributes */

@mixin display-flex {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin display-inline-flex {
	display: -webkit-inline-flex;
	display: inline-flex;
}

@mixin flex($value) {
	-webkit-box-flex: $value;
	-moz-box-flex: $value;
	-webkit-flex: $value;
	-ms-flex: $value;
	flex: $value;
}

@mixin flex-direction($value) {
	@if ($value == row or $value == row-reverse) {
		-webkit-box-orient: horizontal;
		-moz-box-orient: horizontal;
		box-orient: horizontal;

		@if ($value == row-reverse) {
			-webkit-box-orient: reverse;
			-moz-box-orient: reverse;
			box-orient: reverse;
		}
		@else {
			-webkit-box-orient: normal;
			-moz-box-orient: normal;
			box-orient: normal;
		}
	}

	@if ($value == column or $value == column-reverse) {
		-webkit-box-orient: vertical;
		-moz-box-orient: vertical;
		box-orient: vertical;

		@if ($value == column-reverse) {
			-webkit-box-orient: reverse;
			-moz-box-orient: reverse;
			box-orient: reverse;
		}
		@else {
			-webkit-box-orient: normal;
			-moz-box-orient: normal;
			box-orient: normal;
		}
	}

	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	flex-direction: $value;
}

@mixin flex-grow($value) {
	-webkit-flex-grow: $value;
	-moz-flex-grow: $value;
	flex-grow: $value;
}

@mixin flex-shrink($value) {
	-webkit-flex-shrink: $value;
	-moz-flex-shrink: $value;
	flex-shrink: $value;
}

@mixin justify-content($value) {
	@if ($value == flex-start) {
		-webkit-box-pack: start;
		-moz-box-pack: start;
		box-pack: start;
	}

	@if ($value == flex-end) {
		-webkit-box-pack: end;
		-moz-box-pack: end;
		box-pack: end;
	}

	@if ($value == center) {
		-webkit-box-pack: center;
		-moz-box-pack: center;
		box-pack: center;
	}

	@if ($value == space-between) {
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
		box-pack: justify;
	}

	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}

@mixin align-items($value) {
	@if ($value == center or $value == baseline or $value == stretch) {
		-webkit-box-align: $value;
		-moz-box-align: $value;
		box-align: $value;
	}
	@if ($value == flex-start) {
		-webkit-box-align: start;
		-moz-box-align: start;
		box-align: start;
	}
	@if ($value == flex-end) {
		-webkit-box-align: end;
		-moz-box-align: end;
		box-align: end;
	}

	-webkit-align-items: $value;
	align-items: $value;
}

@mixin align-self($value) {
	-webkit-align-self: $value;
	align-self: $value;
}

@mixin flex-wrap($value) {
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	flex-wrap: $value;
}

@mixin flex-basis($value) {
	-webkit-flex-basis: $value;
	-moz-flex-basis: $value;
	flex-basis: $value;
}

@mixin order($value) {
	-webkit-box-ordinal-group: $value;
	-moz-box-ordinal-group: $value;
	-ms-flex-order: $value;
	-webkit-order: $value;
	order: $value;
}

@mixin position($position: null, $top: null, $right: null, $bottom: null, $left: null) {

	@if ($position) {
		position: $position;
	}

	@if ($top) {
		top: $top;
	}

	@if ($right) {
		right: $right;
	}

	@if ($bottom) {
		bottom: $bottom;
	}

	@if ($left) {
		left: $left;
	}
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin min-size($width, $height: $width) {
	min-width: $width;
	min-height: $height;
}

@mixin max-size($width, $height: $width) {
	max-width: $width;
	max-height: $height;
}

@mixin box-sizing($value) {
	-webkit-box-sizing: $value;
	-moz-box-sizing: $value;
	box-sizing: $value;
}

@mixin margin-x($value) {
	margin-left: $value;
	margin-right: $value;
}

@mixin margin-y($value) {
	margin-top: $value;
	margin-bottom: $value;
}

@mixin border-x($value) {
	border-left: $value;
	border-right: $value;
}

@mixin border-y($value) {
	border-top: $value;
	border-bottom: $value;
}

@mixin border-radius($value) {
	-webkit-border-radius: $value;
	-moz-border-radius: $value;
	border-radius: $value;
}

@mixin border-top-radius($value) {
	-webkit-border-top-left-radius: $value;
	-moz-border-top-left-radius: $value;
	border-top-left-radius: $value;
	-webkit-border-top-right-radius: $value;
	-moz-border-top-right-radius: $value;
	border-top-right-radius: $value;
}

@mixin border-left-radius($value) {
	-webkit-border-top-left-radius: $value;
	-moz-border-top-left-radius: $value;
	border-top-left-radius: $value;
	-webkit-border-bottom-left-radius: $value;
	-moz-border-bottom-left-radius: $value;
	border-bottom-left-radius: $value;
}

@mixin border-bottom-radius($value) {
	-webkit-border-bottom-left-radius: $value;
	-moz-border-bottom-left-radius: $value;
	border-bottom-left-radius: $value;
	-webkit-border-bottom-right-radius: $value;
	-moz-border-bottom-right-radius: $value;
	border-bottom-right-radius: $value;
}

@mixin border-right-radius($value) {
	-webkit-border-top-right-radius: $value;
	-moz-border-top-right-radius: $value;
	border-top-right-radius: $value;
	-webkit-border-bottom-right-radius: $value;
	-moz-border-bottom-right-radius: $value;
	border-bottom-right-radius: $value;
}

@mixin border-top-left-radius($value) {
	-webkit-border-top-left-radius: $value;
	-moz-border-top-left-radius: $value;
	border-top-left-radius: $value;
}

@mixin border-top-right-radius($value) {
	-webkit-border-top-right-radius: $value;
	-moz-border-top-right-radius: $value;
	border-top-right-radius: $value;
}

@mixin border-bottom-left-radius($value) {
	-webkit-border-bottom-left-radius: $value;
	-moz-border-bottom-left-radius: $value;
	border-bottom-left-radius: $value;
}

@mixin border-bottom-right-radius($value) {
	-webkit-border-bottom-right-radius: $value;
	-moz-border-bottom-right-radius: $value;
	border-bottom-right-radius: $value;
}

@mixin padding-x($value) {
	padding-left: $value;
	padding-right: $value;
}

@mixin padding-y($value) {
	padding-top: $value;
	padding-bottom: $value;
}

@mixin box-shadow($value) {
	-webkit-box-shadow: $value;
	-moz-box-shadow: $value;
	box-shadow: $value;
}

@mixin appearance($value) {
	-webkit-appearance: $value;
	-moz-appearance: $value;
	appearance: $value;
}

@mixin ellipsis-oneliner {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin column-count($value) {
	-webkit-column-count: $value;
	-moz-column-count: $value;
	column-count: $value;
}

@mixin column-gap($value) {
	-webkit-column-gap: $value;
	-moz-column-gap: $value;
	column-gap: $value;
}

@mixin column-rule($value) {
	-webkit-column-rule: $value;
	-moz-column-rule: $value;
	column-rule: $value;
}

@mixin column-break-inside($value) {
	-webkit-column-break-inside: $value;
	page-break-inside: $value;
	break-inside: $value;
}

@mixin transform($values...) {
	-webkit-transform: $values;
	-moz-transform: $values;
	-ms-transform: $values;
	-o-transform: $values;
	transform: $values;
}

@mixin transform-origin($value) {
	-webkit-transform-origin: $value;
	-moz-transform-origin: $value;
	-ms-transform-origin: $value;
	-o-transform-origin: $value;
	transform-origin: $value;
}

@mixin transition($values...) {
	@each $value in $values {
		$transform_index: str-index("#{ $value }", "transform");
		$contains_transform: $transform_index != null;

		@if $contains_transform {
			$additional_parameters: unquote(str-slice("#{ $value }", $transform_index + str-length("transform") + 1));
			-webkit-transition: -webkit-transform $additional_parameters;
			-moz-transition: -moz-transform $additional_parameters;
			-o-transition: -o-transform $additional_parameters;
		}

		$flex-shrink_index: str-index("#{ $value }", "flex-shrink");
		$contains_flex-shrink: $flex-shrink_index != null;

		@if $contains_flex-shrink {
			$additional_parameters: unquote(str-slice("#{ $value }", $flex-shrink_index + str-length("flex-shrink") + 1));
			-webkit-transition: -webkit-flex-shrink $additional_parameters;
			-moz-transition: -moz-flex-shrink $additional_parameters;
			-o-transition: flex-shrink $additional_parameters;
		}
	}

	-webkit-transition: $values;
	-moz-transition: $values;
	-o-transition: $values;
	transition: $values;
}

@mixin transition-property($values...) {
	-webkit-transition-property: $values;
	-moz-transition-property: $values;
	-o-transition-property: $values;
	transition-property: $values;
}

@mixin transition-duration($value) {
	-webkit-transition-duration: $value;
	-moz-transition-duration: $value;
	-o-transition-duration: $value;
	transition-duration: $value;
}

@mixin transition-delay($value) {
	-webkit-transition-delay: $value;
	-moz-transition-delay: $value;
	-o-transition-delay: $value;
	transition-delay: $value;
}

@mixin animation($value) {
	-webkit-animation: $value;
	-moz-animation: $value;
	-o-animation: $value;
	animation: $value;
}

@mixin animation-duration($value) {
	-webkit-animation-duration: $value;
	-moz-animation-duration: $value;
	-o-animation-duration: $value;
	animation-duration: $value;
}

@mixin keyframes($animation_name) {

	@-webkit-keyframes #{$animation_name} {
		@content;
	}

	@-moz-keyframes #{$animation_name} {
		@content;
	}

	@-o-keyframes #{$animation_name} {
		@content;
	}

	@keyframes #{$animation_name} {
		@content;
	}
}

@mixin user-select($value) {
	-webkit-touch-callout: $value;
	-webkit-user-select: $value;
	-khtml-user-select: $value;
	-moz-user-select: $value;
	-ms-user-select: $value;
	user-select: $value;
}

/* Others */

@mixin readonly {

	&:read-only {
		@content;
	}

	&:-moz-read-only {
		@content;
	}
}

@mixin no-focus-styling {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	-webkit-focus-ring-color:  rgba(0, 0, 0, 0);
	outline: none;
}