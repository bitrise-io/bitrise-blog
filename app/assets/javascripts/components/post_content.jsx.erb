class PostContent extends React.Component {
	constructor(props){
		super(props);
		this.state = {
			sideShareVisible: false,
			sideShareFixed: false,
		};
	}

	componentDidMount() {
		let postTitle = this.props.post_title;
		var parentClass = this;
		$("body").on("scroll", function(e){
			let sideShareVisible = true;
			let sideShareFixed = false;
			if (isElementVisible($(".share-article")) || isElementVisible($(".footer"))
				|| isElementVisible($(".try-wrapper"))  || isElementVisible($(".disqus-container"))) {
				sideShareVisible = false;
			}
			if (!isElementVisible($(".post-featured-image img")) && !isElementVisible($(".share-article"))) {
				sideShareFixed = true;
			}
			parentClass.setState({sideShareVisible});
			parentClass.setState({sideShareFixed});
		});

		$(".facebookShareButton").click(function(e){
			var fbpopup = window.open(`https://www.facebook.com/sharer/sharer.php?u=${window.location}`, "pop", "width=600, height=400, scrollbars=no");
			return false;
		});
		$(".twitterShareButton").click(function(e){
			var fbpopup = window.open(`https://twitter.com/share?url=${window.location}&text=${postTitle}`, "pop", "width=600, height=400, scrollbars=no");
			return false;
		});
		$(".linkedInShareButton").click(function(e){
			var fbpopup = window.open(`https://www.linkedin.com/shareArticle?mini=true&url=${window.location}&title=${postTitle}`, "pop", "width=600, height=400, scrollbars=no");
			return false;
		});
		$(".yCombinatorShareButton").click(function(e){
			var fbpopup = window.open(`https://news.ycombinator.com/submit`, "pop", "width=600, height=400, scrollbars=no");
			return false;
		});
	}

	postBody(rawPostBody) {
		return {__html: rawPostBody};
	}

	render() {
		let socialClasses = "social-icons";
		socialClasses += this.state.sideShareVisible ? "" : " hidden";
		socialClasses += this.state.sideShareFixed ? " fixed" : "";
		let postBodyClasses = "post-body";
		postBodyClasses += this.state.sideShareVisible ? " share-article-vertical-hidden" : "";

		return (
			<% environment.context_class.instance_eval { include ApplicationHelper } %>
			<div>
				<div className="post-body-wrapper">
					<div className="share-article-vertical">
						<div className={socialClasses}>
							<h3>Share</h3>
							<button className="facebookShareButton"><div className="fb-container"><%= svg("social_icons/facebook")%></div></button>
							<button className="twitterShareButton"><div className="twitter-container"><%= svg("social_icons/twitter")%></div></button>
							<button className="linkedInShareButton"><div className="linkedin-container"><%= svg("social_icons/linkedin")%></div></button>
							<button className="yCombinatorShareButton"><div className="yc-container"><%= svg("social_icons/ycombinator")%></div></button>
						</div>
					</div>

					<div className={postBodyClasses} dangerouslySetInnerHTML={this.postBody(this.props.post_body)}></div>
				</div>

				<div className="share-article">
					<h3>Share this article</h3>
					<div className="social-icons">
					<button className="facebookShareButton"><%= svg("social_icons/facebook")%></button>
					<button className="twitterShareButton"><%= svg("social_icons/twitter")%></button>
					<button className="linkedInShareButton"><%= svg("social_icons/linkedin")%></button>
					<button className="yCombinatorShareButton"><%= svg("social_icons/ycombinator")%></button>
					</div>
				</div>
			</div>
		);
	}
}