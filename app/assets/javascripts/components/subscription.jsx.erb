class Subscription extends React.Component {
	constructor() {
		super();
		this.state = {
			isSuccess: false,
			isError: false,
			successMessage: null,
			errorMessage: null,
		}
	}

	subscribeUser() {
		let email = document.getElementById("email-address").value;
		subscribeUserToNewsletter(email).then(responsMessage => {
			switch(responsMessage) {
				case "ok":
					this.setState({isSuccess: true, successMessage: "All set! Thanks for signing up!"});
					break;
				case "already subscribed":
					this.setState({isSuccess: true, successMessage: "You are already subscribed!"});
					break;
				case "invalid email":
					this.setState({isError: true, errorMessage: "The email address is invalid"});
					break;
				case "empty email":
					this.setState({isError: true, errorMessage: "Please give your email address"});
					break;
				default:
					this.setState({isSuccess: false, isError: false, successMessage: null, errorMessage: null});
			}
		});
	}

	render() {
		return(
			<% environment.context_class.instance_eval { include ApplicationHelper } %>
			<div className="subscription">
				<div className="subscription-form">
					<div className="subscription-wrapper" >
						<div className="email-container">
							<input id="email-address" className={this.state.isError ? "error" : ""} type="text" name="email" placeholder="Your email"/>
							{this.state.isError ? <p>{this.state.errorMessage}</p> : null}
						</div>
						<button className="subscribe-button" onClick={() => this.subscribeUser()}>Subscribe</button>
					</div>
					<div className={this.state.isSuccess ? "subscription-wrapper success" : "subscription-wrapper success hidden" }>
						<div className="check-wrapper">
							<%= svg('check') %>
						</div>
						<p>{this.state.successMessage}</p>
					</div>
				</div>
				<a href="/atom" className="feed" value=" " target="blank" />
			</div>
		)
	}
}